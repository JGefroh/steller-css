// -----------------------------
// Borders
// -----------------------------

$borders-classes-map: (
  // border radius
  'rounded-full':  (border-radius: 9999px),

  // border style
  'border-style-solid': (border-style: solid),
  'border-style-dashed': (border-style: dashed),
  'border-style-dotted': (border-style: dotted),
  'border-style-inset': (border-style: inset),
  'border-style-outset': (border-style: outset),
);

@each $steller-color-name, $steller-color-value in $steller-colors {
  $map: ();

  $map: map-merge(
    $map,
    (
      'border-#{$steller-color-name}': (
        border-color: inspect($steller-color-value)
      ),
    )
  );

  $borders-classes-map: map-merge($borders-classes-map, $map);
}

$border-radius-map: (
  (sm, $steller-border-radius-sm),
  (md, $steller-border-radius-md),
  (lg, $steller-border-radius-lg),
  (xl, $steller-border-radius-xl),
);

$border-corners-map: (
  (tl, 'top-left'),
  (tr, 'top-right'),
  (bl, 'bottom-left'),
  (br, 'bottom-right'),
);

@each $size-label, $size in $border-radius-map {
  $borders-classes-map: map-merge(
    $borders-classes-map,
    (
      'rounded-#{$size-label}': (border-radius: $size)
    )
  );

  @each $corner-label, $corner in $border-corners-map {
    $borders-classes-map: map-merge(
      $borders-classes-map,
      (
        'rounded-#{$corner-label}-#{$size-label}': (border-#{$corner}-radius: $size)
      )
    );
  }
}

$border-width-map: (
  (xs, $steller-border-width-xs),
  (sm, $steller-border-width-sm),
  (md, $steller-border-width-md),
  (lg, $steller-border-width-lg),
  (xl, $steller-border-width-xl),
);

@each $width-label, $width in $border-width-map {
  $borders-classes-map: map-merge(
    $borders-classes-map,
    (
      'border-#{$width-label}': (border-width: $width)
    )
  );

  @each $corner-label, $corner in $border-corners-map {
    $borders-classes-map: map-merge(
      $borders-classes-map,
      (
        'border-#{$corner-label}-#{$width-label}': (border-#{$corner}-width: $width)
      )
    );
  }
}
